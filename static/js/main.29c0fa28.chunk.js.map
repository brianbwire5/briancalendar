{"version":3,"sources":["components/Button.js","components/header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","resp","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","res","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29c0fa28.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }}className='btn'>{text}</button> \r\n    )    \r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick:PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n     return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (<Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />)}\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title: 'Brian\\'s Calendar'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title:PropTypes.string,\r\n}\r\n\r\nexport default Header \r\n\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} \r\n        onDoubleClick={() => onToggle(task.id)}>\r\n          <h3>{task.text}<FaTimes style={{ color: 'red', cursor: 'pointer'}} \r\n          onClick={() =>onDelete(task.id)}/></h3>\r\n          <p>{task.day}</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n       <>\r\n         {tasks.map((task) => (\r\n         <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n         ))}\r\n       </>\r\n      )\r\n}\r\n\r\nexport default Tasks\r\n\r\n","import { useState } from 'react'\r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className= 'form-control'>\r\n               <label>Task</label>\r\n               <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className= 'form-control'>\r\n               <label>Day & Time</label>\r\n               <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className= 'form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2022</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\"> Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","\nimport Header from './components/header'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () =>{\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    \n    getTasks()\n  }, [])\n//Fetch Tasks\n  const fetchTasks = async () => {\n      const resp = await fetch('http://localhost:5000/tasks')//fetch returns a promise so we await the promise\n      const data = await resp.json()\n\n      return data\n    }\n    \n    const fetchTask = async (id) => {\n      const resp = await fetch(`http://localhost:5000/tasks/${id}`)//fetch returns a promise so we await the promise\n      const data = await resp.json()\n\n      return data\n    }\n    const addTask = async (task) => {\n       const res = await fetch('http://localhost:5000/tasks/',{\n         method: 'POST',\n         headers: {\n           'Content-type': 'application/json'\n         },\n         body: JSON.stringify(task)\n       } )\n\n\n       const data = await res.json()\n\n       setTasks([...tasks, data])\n\n      // const id = Math.floor(Math.random()* 10000) + 1\n      // const newTask = { id, ...task }\n      // setTasks([...tasks, newTask])\n    }\n\n    //delete task\n    const deleteTask = async (id) => {\n       await fetch(`http://localhost:5000/tasks/${id}`, {\n         method: 'DELETE',\n       })\n       \n       setTasks(tasks.filter((task) =>task.id !==id))// i dont want to show task with id,since all have id therefire it deletes\n    }\n\n\n    const toggleReminder = async (id) => {\n       const taskToToggle = await fetchTask(id)\n       const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n        \n        const res = await fetch(`http://localhost:5000/task/${id}`, {\n            method: 'PUT',\n            headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask),    \n      })\n      const data = await res.json()\n\n      setTasks(\n        tasks.map((task) => \n        task.id === id ? {...task, reminder:\n      data.reminder } : task\n      )\n      )\n    }\n  return (\n    <Router>\n    <div className=\"container\">\n     <Header onAdd ={()=> setShowAddTask(!showAddTask)}\n     showAdd={showAddTask} />\n     \n     <Route path='/' exact render={(props) =>(\n\n       <>\n       {showAddTask && <AddTask onAdd={addTask}/>}\n     {tasks.length > 0 ? (\n     <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) : (\n       'No Tasks to Show'\n     )}\n     \n\n       \n       </>\n     )}/>\n\n     <Route path ='/about' component={About}/>\n     <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}